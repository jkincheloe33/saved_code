{"version":3,"file":"index.dev.mjs","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport {VisuallyHidden} from '@accessible/visually-hidden'\nimport useSwitch from '@react-hook/switch'\nimport clsx from 'clsx'\n\nconst CheckboxContext = React.createContext<CheckboxContextValue>({\n  checked: false,\n  check: noop,\n  uncheck: noop,\n  toggle: noop,\n  focused: false,\n  disabled: false,\n})\n\nexport const useCheckbox = () =>\n  React.useContext<CheckboxContextValue>(CheckboxContext)\n\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(\n  (\n    {\n      checked: controlledChecked,\n      defaultChecked,\n      disabled = false,\n      onChange,\n      onFocus,\n      onBlur,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [checked, toggle] = useSwitch(\n      defaultChecked,\n      controlledChecked,\n      onChange\n    )\n    const [focused, setFocused] = React.useState<boolean>(false)\n    const context = React.useMemo(\n      () => ({\n        checked: checked as boolean,\n        check: disabled ? noop : toggle.on,\n        uncheck: disabled ? noop : toggle.off,\n        toggle: disabled ? noop : toggle,\n        focused,\n        disabled,\n      }),\n      [checked, focused, disabled, toggle]\n    )\n\n    return (\n      <CheckboxContext.Provider value={context}>\n        <VisuallyHidden>\n          <input\n            type='checkbox'\n            checked={checked}\n            ref={ref}\n            onChange={() => {\n              toggle()\n            }}\n            onFocus={(e) => {\n              setFocused(true)\n              onFocus?.(e)\n            }}\n            onBlur={(e) => {\n              setFocused(false)\n              onBlur?.(e)\n            }}\n            disabled={disabled}\n            {...props}\n          />\n        </VisuallyHidden>\n\n        {children}\n      </CheckboxContext.Provider>\n    )\n  }\n)\n\nexport function Checked({children}: CheckedProps) {\n  return useCheckbox().checked ? (\n    <React.Fragment>{children}</React.Fragment>\n  ) : null\n}\n\nexport function Unchecked({children}: UncheckedProps) {\n  return !useCheckbox().checked ? (\n    <React.Fragment>{children}</React.Fragment>\n  ) : null\n}\n\nexport function Checkmark({\n  children,\n  checkedClass,\n  uncheckedClass,\n  checkedStyle,\n  uncheckedStyle,\n}: CheckmarkProps) {\n  const {checked} = useCheckbox()\n  return React.cloneElement(children, {\n    className:\n      clsx(children.props.className, checked ? checkedClass : uncheckedClass) ||\n      void 0,\n    style: Object.assign(\n      {},\n      children.props.style,\n      checked ? checkedStyle : uncheckedStyle\n    ),\n  })\n}\n\nexport function Toggle({children}: ToggleProps) {\n  const {toggle} = useCheckbox()\n  return React.cloneElement(children, {\n    onClick: (e: React.MouseEvent<HTMLElement>) => {\n      children.props.onClick?.(e)\n      toggle()\n    },\n  })\n}\n\nfunction noop() {}\n\nexport interface CheckboxProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'> {\n  checked?: boolean\n  defaultChecked?: boolean\n  disabled?: boolean\n  onChange?: (checked: boolean) => any\n  onFocus?: (event: React.FocusEvent) => any\n  onBlur?: (event: React.FocusEvent) => any\n  children?: React.ReactNode\n}\n\nexport interface CheckedProps {\n  children: React.ReactNode\n}\n\nexport interface UncheckedProps {\n  children: React.ReactNode\n}\n\nexport interface CheckmarkProps {\n  checkedClass?: string\n  uncheckedClass?: string\n  checkedStyle?: React.CSSProperties\n  uncheckedStyle?: React.CSSProperties\n  children: JSX.Element | React.ReactElement\n}\n\nexport interface ToggleProps {\n  children: JSX.Element | React.ReactElement\n}\n\nexport interface CheckboxContextValue {\n  checked: boolean\n  check: () => void\n  uncheck: () => void\n  toggle: () => void\n  focused: boolean\n  disabled: boolean\n}\n\n/* istanbul ignore next */\nif (typeof process !== 'undefined' && process.env.NODE_ENV !== 'production') {\n  Checkbox.displayName = 'Checkbox'\n  Checked.displayName = 'Checked'\n  Unchecked.displayName = 'Unchecked'\n  Toggle.displayName = 'Toggle'\n}\n"],"names":["CheckboxContext","React","checked","check","noop","uncheck","toggle","focused","disabled","useCheckbox","Checkbox","ref","controlledChecked","defaultChecked","onChange","onFocus","onBlur","children","props","useSwitch","setFocused","context","on","off","e","Checked","React.Fragment","Unchecked","Checkmark","checkedClass","uncheckedClass","checkedStyle","uncheckedStyle","className","clsx","style","Object","assign","Toggle","onClick","process","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,eAAe,gBAAGC,aAAA,CAA0C;AAChEC,EAAAA,OAAO,EAAE,KADuD;AAEhEC,EAAAA,KAAK,EAAEC,IAFyD;AAGhEC,EAAAA,OAAO,EAAED,IAHuD;AAIhEE,EAAAA,MAAM,EAAEF,IAJwD;AAKhEG,EAAAA,OAAO,EAAE,KALuD;AAMhEC,EAAAA,QAAQ,EAAE;AANsD,CAA1C,CAAxB;IASaC,WAAW,GAAG,MACzBR,UAAA,CAAuCD,eAAvC;IAEWU,QAAQ,gBAAGT,UAAA,CACtB,OAWEU,GAXF,KAYK;AAAA,MAXH;AACET,IAAAA,OAAO,EAAEU,iBADX;AAEEC,IAAAA,cAFF;AAGEL,IAAAA,QAAQ,GAAG,KAHb;AAIEM,IAAAA,QAJF;AAKEC,IAAAA,OAAO,EAAPA,QALF;AAMEC,IAAAA,MAAM,EAANA,OANF;AAOEC,IAAAA;AAPF,GAWG;AAAA,MAHEC,KAGF;;AACH,MAAM,CAAChB,OAAD,EAAUI,MAAV,IAAoBa,SAAS,CACjCN,cADiC,EAEjCD,iBAFiC,EAGjCE,QAHiC,CAAnC;AAKA,MAAM,CAACP,OAAD,EAAUa,UAAV,IAAwBnB,QAAA,CAAwB,KAAxB,CAA9B;AACA,MAAMoB,OAAO,GAAGpB,OAAA,CACd,OAAO;AACLC,IAAAA,OAAO,EAAEA,OADJ;AAELC,IAAAA,KAAK,EAAEK,QAAQ,GAAGJ,IAAH,GAAUE,MAAM,CAACgB,EAF3B;AAGLjB,IAAAA,OAAO,EAAEG,QAAQ,GAAGJ,IAAH,GAAUE,MAAM,CAACiB,GAH7B;AAILjB,IAAAA,MAAM,EAAEE,QAAQ,GAAGJ,IAAH,GAAUE,MAJrB;AAKLC,IAAAA,OALK;AAMLC,IAAAA;AANK,GAAP,CADc,EASd,CAACN,OAAD,EAAUK,OAAV,EAAmBC,QAAnB,EAA6BF,MAA7B,CATc,CAAhB;AAYA,sBACE,uBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEe;AAAjC,kBACE,uBAAC,cAAD,qBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEnB,OAFX;AAGE,IAAA,GAAG,EAAES,GAHP;AAIE,IAAA,QAAQ,EAAE,MAAM;AACdL,MAAAA,MAAM;AACP,KANH;AAOE,IAAA,OAAO,EAAGkB,CAAD,IAAO;AACdJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,MAAAA,QAAO,SAAP,IAAAA,QAAO,WAAP,YAAAA,QAAO,CAAGS,CAAH,CAAP;AACD,KAVH;AAWE,IAAA,MAAM,EAAGA,CAAD,IAAO;AACbJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,OAAM,SAAN,IAAAA,OAAM,WAAN,YAAAA,OAAM,CAAGQ,CAAH,CAAN;AACD,KAdH;AAeE,IAAA,QAAQ,EAAEhB;AAfZ,KAgBMU,KAhBN,EADF,CADF,EAsBGD,QAtBH,CADF;AA0BD,CA1DqB;AA6DjB,SAASQ,OAAT,QAA2C;AAAA,MAA1B;AAACR,IAAAA;AAAD,GAA0B;AAChD,SAAOR,WAAW,GAAGP,OAAd,gBACL,uBAACwB,QAAD,QAAiBT,QAAjB,CADK,GAEH,IAFJ;AAGD;AAEM,SAASU,SAAT,QAA+C;AAAA,MAA5B;AAACV,IAAAA;AAAD,GAA4B;AACpD,SAAO,CAACR,WAAW,GAAGP,OAAf,gBACL,uBAACwB,QAAD,QAAiBT,QAAjB,CADK,GAEH,IAFJ;AAGD;AAEM,SAASW,SAAT,QAMY;AAAA,MANO;AACxBX,IAAAA,QADwB;AAExBY,IAAAA,YAFwB;AAGxBC,IAAAA,cAHwB;AAIxBC,IAAAA,YAJwB;AAKxBC,IAAAA;AALwB,GAMP;AACjB,MAAM;AAAC9B,IAAAA;AAAD,MAAYO,WAAW,EAA7B;AACA,sBAAOR,YAAA,CAAmBgB,QAAnB,EAA6B;AAClCgB,IAAAA,SAAS,EACPC,IAAI,CAACjB,QAAQ,CAACC,KAAT,CAAee,SAAhB,EAA2B/B,OAAO,GAAG2B,YAAH,GAAkBC,cAApD,CAAJ,IACA,KAAK,CAH2B;AAIlCK,IAAAA,KAAK,EAAEC,MAAM,CAACC,MAAP,CACL,EADK,EAELpB,QAAQ,CAACC,KAAT,CAAeiB,KAFV,EAGLjC,OAAO,GAAG6B,YAAH,GAAkBC,cAHpB;AAJ2B,GAA7B,CAAP;AAUD;AAEM,SAASM,MAAT,QAAyC;AAAA,MAAzB;AAACrB,IAAAA;AAAD,GAAyB;AAC9C,MAAM;AAACX,IAAAA;AAAD,MAAWG,WAAW,EAA5B;AACA,sBAAOR,YAAA,CAAmBgB,QAAnB,EAA6B;AAClCsB,IAAAA,OAAO,EAAGf,CAAD,IAAsC;AAAA;;AAC7C,kDAAAP,QAAQ,CAACC,KAAT,EAAeqB,OAAf,sGAAyBf,CAAzB;AACAlB,MAAAA,MAAM;AACP;AAJiC,GAA7B,CAAP;AAMD;;AAED,SAASF,IAAT,GAAgB;;AA0ChB;AACA,IAAI,OAAOoC,OAAP,KAAmB,WAAnB,IAAkCA,YAAA,KAAyB,YAA/D,EAA6E;AAC3E9B,EAAAA,QAAQ,CAAC+B,WAAT,GAAuB,UAAvB;AACAhB,EAAAA,OAAO,CAACgB,WAAR,GAAsB,SAAtB;AACAd,EAAAA,SAAS,CAACc,WAAV,GAAwB,WAAxB;AACAH,EAAAA,MAAM,CAACG,WAAP,GAAqB,QAArB;AACD;;;;"}