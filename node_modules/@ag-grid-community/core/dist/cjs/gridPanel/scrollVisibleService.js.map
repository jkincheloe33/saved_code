{"version":3,"sources":["../../src/ts/gridPanel/scrollVisibleService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8CAAqD;AACrD,gDAA+C;AAC/C,oCAAiE;AAUjE;IAA0C,wCAAQ;IAAlD;;IAmCA,CAAC;IA3BU,gDAAiB,GAAxB,UAAyB,MAA+B;QACpD,IAAM,mBAAmB,GACrB,IAAI,CAAC,uBAAuB,KAAK,MAAM,CAAC,uBAAuB;YAC/D,IAAI,CAAC,qBAAqB,KAAK,MAAM,CAAC,qBAAqB,CAAC;QAEhE,IAAI,mBAAmB,EAAE;YACrB,IAAI,CAAC,uBAAuB,GAAG,MAAM,CAAC,uBAAuB,CAAC;YAC9D,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,CAAC;YAE1D,IAAM,OAAK,GAAiC;gBACxC,IAAI,EAAE,eAAM,CAAC,+BAA+B;gBAC5C,GAAG,EAAE,IAAI,CAAC,OAAO;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;aAC5B,CAAC;YACF,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,OAAK,CAAC,CAAC;SAC1C;IACL,CAAC;IAED,mDAAmD;IAC5C,wDAAyB,GAAhC;QACI,OAAO,IAAI,CAAC,uBAAuB,CAAC;IACxC,CAAC;IAED,2BAA2B;IACpB,sDAAuB,GAA9B;QACI,OAAO,IAAI,CAAC,qBAAqB,CAAC;IACtC,CAAC;IAhCuB;QAAvB,mBAAS,CAAC,WAAW,CAAC;2DAA8B;IAC/B;QAArB,mBAAS,CAAC,SAAS,CAAC;yDAA0B;IAHtC,oBAAoB;QADhC,cAAI,CAAC,sBAAsB,CAAC;OAChB,oBAAoB,CAmChC;IAAD,2BAAC;CAnCD,AAmCC,CAnCyC,mBAAQ,GAmCjD;AAnCY,oDAAoB","file":"scrollVisibleService.js","sourcesContent":["import { Bean, Autowired } from \"../context/context\";\nimport { BeanStub } from \"../context/beanStub\";\nimport { Events, ScrollVisibilityChangedEvent } from \"../events\";\nimport { ColumnApi } from \"../columnController/columnApi\";\nimport { GridApi } from \"../gridApi\";\n\nexport interface SetScrollsVisibleParams {\n    horizontalScrollShowing: boolean;\n    verticalScrollShowing: boolean;\n}\n\n@Bean('scrollVisibleService')\nexport class ScrollVisibleService extends BeanStub {\n\n    @Autowired('columnApi') private columnApi: ColumnApi;\n    @Autowired('gridApi') private gridApi: GridApi;\n\n    private horizontalScrollShowing: boolean;\n    private verticalScrollShowing: boolean;\n\n    public setScrollsVisible(params: SetScrollsVisibleParams): void {\n        const atLeastOneDifferent =\n            this.horizontalScrollShowing !== params.horizontalScrollShowing ||\n            this.verticalScrollShowing !== params.verticalScrollShowing;\n\n        if (atLeastOneDifferent) {\n            this.horizontalScrollShowing = params.horizontalScrollShowing;\n            this.verticalScrollShowing = params.verticalScrollShowing;\n\n            const event: ScrollVisibilityChangedEvent = {\n                type: Events.EVENT_SCROLL_VISIBILITY_CHANGED,\n                api: this.gridApi,\n                columnApi: this.columnApi\n            };\n            this.eventService.dispatchEvent(event);\n        }\n    }\n\n    // used by pagination service - to know page height\n    public isHorizontalScrollShowing(): boolean {\n        return this.horizontalScrollShowing;\n    }\n\n    // used by header container\n    public isVerticalScrollShowing(): boolean {\n        return this.verticalScrollShowing;\n    }\n}\n"]}